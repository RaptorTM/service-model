import info.*
import modules.*
import modules.config.*


pipeline {
    agent any

    stages {
        stage('Run main.groovy') {
            steps {
                script {
                    load 'src/ci/Props.groovy'
                    def serviceInfo = load 'src/info/ServiceInfo.groovy'
                    def serviceModel = load 'src/modules/config/serviceModel.groovy'
                    def serviceModelM = serviceModel().getConfig().call()

                    def Services = serviceInfo.getServiceInfoByName('uber-bff', serviceModelM).call()
                    println Services['dockerfile']

//                     def deployEnvironment = deployEnvironmentInfo.getDeployEnvironmentInfoByName("dev", serviceModelM)
//                     println deployEnvironment
//                     def cluster = clusterInfo.getClusterInfoByName(deployEnvironment.cluster, serviceModelM)
//                     println cluster
//                     def landscape = landscapeInfo.getLandscapeInfoByName(cluster.landscape, serviceModelM)
//                     println landscape
//                     def servicesToDeploy = serviceInfo.getAllServicesFromModel(serviceModelM)
//                     println servicesToDeploy
//                     def servicesToBuild = serviceInfo.getAllServicesFromModel(serviceModelM)
//                     println servicesToBuild
                }
            }
        }
    }
}